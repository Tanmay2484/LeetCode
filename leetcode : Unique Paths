/* Unique Paths
Link : https://leetcode.com/problems/unique-paths/
*/
class Solution {
public:
    int dp[101][101];
    int  recursion(int a,int b,int i,int j){
        if(i==a-1 && j==b-1)
            return 1;
        if(i==a || j==b)
            return 0;
        if(dp[i][j]!=-1) return dp[i][j];
        int choice1=recursion(a,b,i+1,j);
        int choice2=recursion(a,b,i,j+1);
        return dp[i][j]=choice1+choice2;
    }
    int uniquePaths(int m, int n) {
       for(int i=0;i<101;i++){
           for(int j=0;j<101;j++){
               dp[i][j]=-1;
           }
       }
        return recursion(m,n,0,0);
    }
};
