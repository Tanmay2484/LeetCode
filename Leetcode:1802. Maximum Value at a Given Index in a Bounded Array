/* 1802. Maximum Value at a Given Index in a Bounded Array
 Link: https://leetcode.com/problems/maximum-value-at-a-given-index-in-a-bounded-array/description/
*/
class Solution {
    bool check(int n, int index, int maxSum, long mid) {
        long sum = mid * mid;
        int lenLeft = index + 1, lenRight = n - index - 1;
        if(lenLeft > mid) {
            sum += (lenLeft - mid);
        } else {
            sum -= (mid - lenLeft) * (mid - lenLeft + 1) / 2;
        }
        if(lenRight > mid - 1) {
            sum += (lenRight - mid + 1);
        } else {
            sum -= (mid - 1 - lenRight) * (mid - lenRight) / 2;
        }
        return sum <= maxSum;
    }
public:
    int maxValue(int n, int index, int maxSum) {
        int low = 1, high = maxSum;
        int ans = low;
        while(low <= high) {
            int mid = low + (high - low) / 2;
            if(check(n, index, maxSum, mid)) {
                ans = max(ans, mid);
                low = mid + 1;
            } else {
                high = mid - 1;
            }
        }
        return ans;
    }
};
